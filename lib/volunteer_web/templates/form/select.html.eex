<div class="form-group row mb-2">
	<div class="col-sm-3 text-right">
		<strong><%= label @form, @field, @title, class: label_classes(assigns, ["col-form-label"]) %></strong>
	</div>
	<div class="col-sm-9">
		<%= if assigns[:multiple] == true do %>
			<%= multiple_select(@form, @field, @choices,
				[
					class: input_classes(@form, @field, ["form-control"]),
					required: (if assigns[:required] == true, do: true, else: false),
				]
				++ Map.get(assigns, :input_opts, [])) %>
		<% else %>
			<%= select(@form, @field, @choices,
				[
					class: input_classes(@form, @field, ["form-control"]),
					required: (if assigns[:required] == true, do: true, else: false),
				]
				++ Map.get(assigns, :input_opts, [])) %>
		<% end %>
	    <%= error_tag @form, @field %>
	</div>
</div>
<script>
	(function() {
		"use strict";
		var defaultConfig = {}
		<%= if assigns[:choices_opts_template] == :multiple_select do %>
			defaultConfig = {
				"removeItemButton": true,
				"duplicateItems": false,
				"paste": false,
			}
		<% end %>
		var passedConfig = JSON.parse(atob(("<%= encode_for_client(assigns[:choices_opts]) %>")))
		var config = Object.assign(defaultConfig, passedConfig)
		// new Choices("#<%= input_id(@form, @field) %>", config)
	})();
</script>
