### CONSTANTS

APP="volunteer"

BUILD_HOST="iicanada-vagrant.local"
BUILD_USER="vagrant"
BUILD_AT="/tmp/edeliver/$APP/builds"
ASSETS_AT="$BUILD_AT/assets"

RELEASE_DIR="$BUILD_AT/_build/prod/rel/$APP"

# prevent re-installing node modules; this defaults to "."
GIT_CLEAN_PATHS="_build rel priv/static"

# STAGING_HOSTS="188.166.182.170"
# STAGING_USER="deploy"
# TEST_AT="/home/deploy/staging"

PRODUCTION_HOSTS="iicanada-prod"
PRODUCTION_USER="deploy"
DELIVER_TO="/app"
STATIC_TO="/www"


### HOOKS

pre_erlang_get_and_update_deps() {
  symlink_prod_secrets
}

pre_erlang_clean_compile() {
  build_static_assets
}

post_erlang_update() {
  copy_static_assets
}

post_upgrade_release() {
  copy_static_assets
}

# post_init_app_remotely() {
#   copy_static_assets
# }

# post_extract_release_archive() {
#   copy_static_assets
# }


### ACTIONS

symlink_prod_secrets() {
  local _prod_secret_path="/app/config/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
    "
  fi
}

build_static_assets() {
  status "Ensure priv/static folder exists"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    mkdir -p priv/static
  "

  status "Installing NPM dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$ASSETS_AT'
    npm install $SILENCE
  "

  status "Building static files"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$ASSETS_AT'
    npm run deploy $SILENCE
  "

  status "Running phoenix.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}

copy_static_assets() {
  status "Copying static assets"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$STATIC_TO'
    mkdir -p '$APP'
    cp -r '$DELIVER_TO/$APP/lib/$APP$RELEASE-$VERSION/priv/static' '$APP/'
    sudo chown -R :nginx '$APP'
  "
}
