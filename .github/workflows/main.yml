name:                     Everything

on:                       [push]

jobs:
  build:

    runs-on:              ubuntu-latest

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_test
        ports:
          - 5432:5432
        options: --name pg
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:

      - uses:             actions/checkout@v1

      - name:             Setup Elixir
        uses:             actions/setup-elixir@1.0.0
        with:
          elixir-version: 1.8.2
          otp-version:    21.3
          install-hex:    true
          install-rebar:  true

      # - name:             Setup PostgreSQL
      #   run: |
      #     sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
      #     wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
      #     sudo apt update
      #     sudo apt install postgresql-9.6 postgresql-contrib-9.6
      #     sudo service postgresql start

      # - name:             Setup PostgreSQL
      #   uses:             Harmon758/postgresql-action@v1.0.0
      #   with:
      #     postgresql version: "9.6"
      #     postgresql db:  "postgres_test"
      #     postgresql user: "postgres"
      #     postgresql password: "postgres"

      - name:             Cache `_build` folder
        uses:             actions/cache@v1
        with:
          path:           "./_build"
          key:            ${{ runner.os }}-build

      - name:             Cache `deps` folder
        uses:             actions/cache@v1
        with:
          path:           "./deps"
          key:            ${{ runner.os }}-deps

      - name:             Refresh Elixir deps
        run:              "./refresh_elixir_deps.sh"

      - name:             Compile
        run:              "./compile.sh"

      - name:             Test
        run:              "docker exec -t pg ./reset_db_local.sh test"
        env:
          PGPASSWORD:     "postgres"

      # - name:             Decrypt Secrets
      #   run:              "./infra-decrypt.sh"
      #   env:
      #     INFRA_GPG_PASS: ${{ secrets.INFRA_GPG_PASS }}

      # - name:             Deploy to Production
      #   run:              "./deploy.sh prod"
