name:                          Deploy

on:                            ['deployment']

jobs:
  deploy:

    runs-on:                   ubuntu-18.04

    if:                        github.event.deployment.environment == 'prod' || github.event.deployment.environment == 'stg'
    env:
      DEPLOY_ENV:              ${{ github.event.deployment.environment }}

    steps:

      - uses:                  actions/checkout@v1
        with:
          fetch-depth:         1

      - name:                  Deployment pending
        uses:                  deliverybot/deployment-status@master
        with:
          state:               pending
          token:               ${{ github.token }}

      - name:                  Setup Elixir
        uses:                  actions/setup-elixir@1.0.0
        with:
          elixir-version:      1.9.4
          otp-version:         21.3.8.10
          install-hex:         true
          install-rebar:       true

      - name:                  Refresh `redirect` packages
        run:                   (cd redirect && npm install)
        if:                    github.event.deployment.environment == 'stg'

      - name:                  Git status check
        run:                   git status

      - name:                  Refresh Elixir deps
        run:                   mix deps.get

      - name:                  Git status check
        run:                   git status

      - name:                  Decrypt secrets
        run:                   "./infra_decrypt.sh"
        env:
          INFRA_GPG_PASS:      ${{ secrets.INFRA_GPG_PASS }}

      - name:                  Compile
        run:                   |
          source <(elixir ./infra/generate-envvars.exs --env "$DEPLOY_ENV")
          MIX_ENV=prod mix compile --warnings-as-errors --force

      - name:                  Setup GCP CLI
        run:                   |
          source <(elixir ./infra/generate-envvars.exs --env "$DEPLOY_ENV")
          gcloud auth activate-service-account --key-file ./infra/gcp.serviceaccount.deploy.secrets.json
          gcloud config set project $GCLOUD_PROJECT
          gcloud config set app/cloud_build_timeout 60m

      - name:                  Setup GCP CloudSQL Proxy
        run:                   |
          source <(elixir ./infra/generate-envvars.exs --env "$DEPLOY_ENV")
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          sudo mkdir /cloudsql
          sudo chmod 777 /cloudsql
          ./cloud_sql_proxy -instances="$DB_INSTANCE_ID" -dir=/cloudsql &

      - name:                  Migrate & Seed Production Database
        run:                   |
          source <(elixir ./infra/generate-envvars.exs --env "$DEPLOY_ENV")
          MIX_ENV=prod mix ecto.migrate
          MIX_ENV=prod mix run --require ./priv/repo/seeds/prod/*.exs

      - name:                  Deploy to Production
        run:                   "./deploy.sh \"$DEPLOY_ENV\""
        env:
           NETLIFY_AUTH_TOKEN: ${{ secrets. NETLIFY_AUTH_TOKEN }}

      - name:                  Deployment success
        if:                    success()
        uses:                  deliverybot/deployment-status@master
        with:
          state:               success
          token:               ${{ github.token }}

      - name:                  Deployment failure
        if:                    failure()
        uses:                  deliverybot/deployment-status@master
        with:
          state:               failure
          token:               ${{ github.token }}
